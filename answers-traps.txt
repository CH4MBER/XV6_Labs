1. ***Which registers contain arguments to functions? For example, which register holds 13 in main's call to `printf`?***

   寄存器a0~a7，13存在a2中。

2. ***Where is the call to function `f` in the assembly code for main? Where is the call to `g`? (Hint: the compiler may inline functions.)***

   没有调用。 `g`被内联inline到 f(x) 中，然后 `f`又被进一步内联到 `main`中。

3. ***At what address is the function `printf` located?***

   0x0000000000000630

4. ***What value is in the register `ra` just after the `jalr` to `printf` in `main`?***

   0x0000000000000038

5. ***Run the following code.***

   ```C
   	unsigned int i = 0x00646c72;
   	printf("H%x Wo%s", 57616, &i);
   ```

   ***What is the output? [Here's an ASCII table](https://www.asciitable.com/) that maps bytes to characters.***

   ***The output depends on that fact that the RISC-V is little-endian. If the RISC-V were instead big-endian what would you set to in order to yield the same output? Would you need to change to a different value?`***

   `HE110 World`；

   反过来替换成 0x00726c64;

   不需要，57616 的十六进制是 110，无论端序

6. ***In the following code, what is going to be printed after ? (note: the answer is not a specific value.) Why does this happen? `'y='`***

   ```C
   	printf("x=%d y=%d", 3);
   ```

   "y="后的参数存储在对应的寄存器 a2 中，因此会直接输出之前存在a2中的值。